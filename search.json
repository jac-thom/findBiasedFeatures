[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Find Biased Features",
    "section": "",
    "text": "1 Background",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Background</span>"
    ]
  },
  {
    "objectID": "index.html#the-importance-of-feature-selection",
    "href": "index.html#the-importance-of-feature-selection",
    "title": "Find Biased Features",
    "section": "1.1 The importance of feature selection",
    "text": "1.1 The importance of feature selection\nA crucial step in single cell/nucleus RNAseq analysis is the implementation of clustering algorithms to generate groups of cells/nuclei with similar gene expression patterns. These clusters are often necessary to classify observations (cells/nuclei) based on cell state (cell type, developmental stage, etc.) to unleash the potential of the single cell/ nucleus approach.\nClusters are generated based on patterns of expression of a subset of features, and the selection of these features is highly influential to the downstream results. When selecting features for dimension reduction and clustering, genes from the mitochondrial genome, known sex-linked genes, or cell cycle genes (depending on the dataset) are often removed from consideration. These “biological quality controls” can help produce clusters representing desired cell state by removing expression patterns linked to donor sex or cell size.\nSince canonical cell state marker genes will be highly expressed in one subset of observations and lowly expressed or absent in all others, common feature selection methods identify genes with highly variable expression within the dataset. Such methods often rely on modeling the mean-variance relationship and allow for the consideration of potential batch effects in these models. Batch consideration enables data-driven exclusion of features that capture technical noise or biological differences not relevant to the classification of cell state.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Background</span>"
    ]
  },
  {
    "objectID": "index.html#feature-selection-in-spatial-transcriptomics",
    "href": "index.html#feature-selection-in-spatial-transcriptomics",
    "title": "Find Biased Features",
    "section": "1.2 Feature selection in spatial transcriptomics",
    "text": "1.2 Feature selection in spatial transcriptomics\nIn spatially resolved transcriptomics (SRT), the individual observations are not single cells or single nuclei, but rather single points in 2D space (on a tissue section). These x- and y-coordinates are preserved through sequencing, such that the processed transcriptomic data can reconstruct gene expression patterns that vary across different regions of tissue present in the same section. The goal of clustering in SRT datasets is often to use gene expression patterns to identify known spatial domains (e.g., different cortical layers of the brain).\nThe extra spatial dimension (x/y coordinates) in SRT can be capitalized upon to identify features that have variable expression not only between observations but between different regions of the tissue section (spatially variable genes or SVGs). SVG selection methods often out-perform classic single cell or nuclei methods in generating features that recapitulate known spatial domains.\nHowever, SVG selection methods do not permit for the consideration of user-defined batch effects that may introduce technical noise or other sources of variation that may prevent or distort spatial domains.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Background</span>"
    ]
  },
  {
    "objectID": "index.html#the-problem",
    "href": "index.html#the-problem",
    "title": "Find Biased Features",
    "section": "1.3 The problem",
    "text": "1.3 The problem\nWhile analyzing a 10X Visium SRT dataset from the human DLPFC, we recognized the need to evaluate our SVGs for the potential influence of batch effects in order to optimize spatial domain clustering.\nWe used nnSVG to select 2098 statistically significant SVGs and then used PRECAST to identify clusters that hopefully strongly corresponded to the cortical layers in the DLPFC. Using K=7 or K=8, we were unable to distinguish L5 from L6 with this set of features. We also identified a cluster of observations that appeared to be driven by low UMI count rather than expression of SVGs.\nFigure 1.1 PRECAST clusters: 2098 input features (SVGs), K=7\n\n\n\n\n\n\n\n\n\nFigure 1.2 PRECAST clusters: 2098 input features (SVGs), K=8\n\n\n\n\n\n\n\n\n\nThe lack of distinction between L5 and L6 did not appear to be due under-representation of known gene markers for these cortical layers in the SVG set. (DLPFC layer markers pulled from Huuki-Meyers et. al, 2024 Table S8.)\nFigure 1.3 The SVG set comprises known marker genes for all DLPFC layers.\n\n\n\n\n\n\n\n\n\nNevertheless, we supplemented the SVG set with the most significant markers for each cortical layer (top 100 lowest FDR for each layer), adding 327 features to the input for clustering. We found that the number of L5 and L6 markers increased mildly, indicating that the most striking L5 and L6 markers were already included in the SVG list.\nFigure 1.4 Adding the most significant marker genes marginally increases the SVG set.\n\n\n\n\n\n\n\n\n\nSupplementing the SVGs with additional layer markers did not improve spatial domain clustering with PRECAST at K=7 or K=8.\nFigure 1.5 PRECAST clusters: 2425 input features (SVGs + layer markers), K=7\n\n\n\n\n\n\n\n\n\nFigure 1.6 PRECAST clusters: 2425 input features (SVGs + layer markers), K=8\n\n\n\n\n\n\n\n\n\nThis led us to hypothesize that a small number of features within the SVG list were capturing technical variation in gene expression.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Background</span>"
    ]
  },
  {
    "objectID": "index.html#the-goal",
    "href": "index.html#the-goal",
    "title": "Find Biased Features",
    "section": "1.4 The goal",
    "text": "1.4 The goal\nOur goal is to use feature selection methods that can account for batch effects to flag SVGs that may be strongly influenced by technical factors. By examining the per-gene variance/deviance with and without a batch effect, we aim to identify features that could be interfering with the generation of clusters that correspond to known DLPFC spatial domains.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Background</span>"
    ]
  },
  {
    "objectID": "spatialLIBD.html",
    "href": "spatialLIBD.html",
    "title": "2  Exploration with spatialLIBD",
    "section": "",
    "text": "2.1 Intro\nWe chose to develop our method on an unrelated DLPFC dataset available through the spatialLIBD package. This way we can explore how to identify batch-biased features while being blinded to how the approach will impact our dataset.\nFirst, we chose a feature selection method that can incorporate a batch variable into the model. Next, we compared the per-gene ranks and dispersion values when the model was run with and without a batch effect. Finally, we confirmed that the genes identified as biased did exhibit expression patterns consistent with non-biological technical noise.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Exploration with spatialLIBD</span>"
    ]
  },
  {
    "objectID": "spatialLIBD.html#intro",
    "href": "spatialLIBD.html#intro",
    "title": "2  Exploration with spatialLIBD",
    "section": "",
    "text": "spatialLIBD example dataset\nThe spatialLIBD dataset was collected from the same brain region as our data (DLPFC) and was also sequenced with 10X Visium. This dataset has 3 subjects and 4 samples from each subject. Because there was no slide metadata available, we investigated whether batch = subject influenced the top features.\n\nlibrary(spatialLIBD)\nspe &lt;- fetch_data(type = \"spe\")\n\n\n\n         subject\nsample_id Br5292 Br5595 Br8100\n   151507   4226      0      0\n   151508   4384      0      0\n   151509   4789      0      0\n   151510   4634      0      0\n   151669      0   3661      0\n   151670      0   3498      0\n   151671      0   4110      0\n   151672      0   4015      0\n   151673      0      0   3639\n   151674      0      0   3673\n   151675      0      0   3592\n   151676      0      0   3460",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Exploration with spatialLIBD</span>"
    ]
  },
  {
    "objectID": "spatialLIBD.html#feature-selection-comparison",
    "href": "spatialLIBD.html#feature-selection-comparison",
    "title": "2  Exploration with spatialLIBD",
    "section": "2.2 Feature selection comparison",
    "text": "2.2 Feature selection comparison\nWe examined two different models of feature selection. The first model is from scran and utilizes per-gene variance to identify top features. This method, here referred to as the mean-variance model, is performed after normalization of the counts matrix. We opted to use the modelGeneVarByPoisson function which assumes that the mean-variance relationship trend due to technical noise follow a poisson distribution.\n\nmv &lt;- modelGeneVarByPoisson(logcounts(spe))\n\nThe second approach from scry fits a model to the raw counts matrix and assumes that genes with no biologically meaningful expression pattern will fit a binomial distribution. The greater the per-gene deviance from this null model, the more likely the expression of said gene is biologically meaningful as a top feature. We refer to this method as the binomial deviance model.\n\nbd &lt;- devianceFeatureSelection(counts(spe), fam=\"binomial\")\n\n\n2.2.1 How do SVGs rank in each model?\nOur goal is to determine whether SVGs exhibit biased expression according of different batch variables. Therefore, the ideal feature selection model would similarly identify SVGs as highly ranked features.\nWe ran the nnSVG model on the spatialLIBD data to identify SVGs. We next examined the rank of these features in the mean-variance model and the binomial deviance model.\n\nlibd.svgs = read.csv(\"processed-data/libd-all_nnSVG_p-05-features-df.csv\", \n                     row.names=1)\n\nWe found that the mean-variance model ranked a considerable portion of the SVGs as some of the lowest features in the dataset. In contrast, all the SVGs were ranked highly with the binomial deviance model.\nFigure 2.1 Bionomial deviance model better corresponds to nnSVG results\n\n\n\n\n\n\n\n\n\n\n\n2.2.2 Are top ranked genes representative of layer-specific differences in gene expression?\nA separate but related property of the ideal feature selection model would be to generate a list of top features that are consistent with known DLPFC layer markers and comprise markers of all layer domains. We used the recently published list of DLPFC layer markers from Huuki-Meyers et. al, 2024 Table S8 to characterize the top 3000 features of the mean-variance and binomial deviance models.\n\nlm.df = read.csv(\"processed-data/TableS8_filtered-layer-markers.csv\")\n\nThese results further supported the selection of the binomial deviance model, as the 3000 most highly ranked features represented significant markers for all DLPFC cortical layers. In contrast, the 3000 most highly ranked features from the mean-variance model were overwhelmingly L1 and white matter (WM) markers.\nFigure 2.2 Binomial deviance model better corresponds to known DLPFC layer markers",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Exploration with spatialLIBD</span>"
    ]
  },
  {
    "objectID": "spatialLIBD.html#influence-of-batch-in-binomial-deviance-model-output",
    "href": "spatialLIBD.html#influence-of-batch-in-binomial-deviance-model-output",
    "title": "2  Exploration with spatialLIBD",
    "section": "2.3 Influence of batch in binomial deviance model output",
    "text": "2.3 Influence of batch in binomial deviance model output\nHaving picked a feature selection method, next we compared the per-gene ranks and deviance values when the model was run with and without a batch effect. Because the spatialLIBD data has 4 samples per subject, we used batch= subject.\n\nbd.batch &lt;- devianceFeatureSelection(counts(spe), fam=\"binomial\", \n                                     batch=as.factor(spe$subject))\n\nIncluding a subject-batch effect doesn’t dramatically change the rank of the SVGs.\nFigure 2.3 SVGs are consistently highly ranked in binomial deviance model with and without batch\n\n\n\n\n\n\n\n\n\nWe see that &gt;90% of spatialLIBD SVGs are ranked in the top 3000 features by either binomial deviance model.\n\nquantile(bd.df[libd.svgs$gene_id,\"rank\"], probs=seq(0,1,.1))\n\n    0%    10%    20%    30%    40%    50%    60%    70%    80%    90%   100% \n   1.0  200.6  400.2  606.8  830.4 1060.0 1316.8 1601.2 1913.6 2256.8 4077.0 \n\nquantile(bd.batch.df[libd.svgs$gene_id,\"rank\"], probs=seq(0,1,.1))\n\n    0%    10%    20%    30%    40%    50%    60%    70%    80%    90%   100% \n   1.0  199.2  401.2  606.8  830.4 1060.0 1316.6 1603.2 1917.8 2271.4 5903.0 \n\n\nThis suggests that scry::devianceFeatureSelection could be a good alternative to nnSVG feature selection if there is considerable technical variation in the experiment/ dataset. It can also be run much faster.\n\n2.3.1 Highly deviant genes\nNow we can examine the influence of batch= subject on the per-gene deviance values and ranks. Since we propose that using a binomial deviance model to select top features is a possible alternative to nnSVG feature selection we will first examine the top features as ranked based on the binomial deviance model (rank&lt;=3000 in either model).\n\nsubject.df &lt;- left_join(bd.df, bd.batch.df,\n                       by=c(\"gene\", \"gene_name\",\"is_svg\"),\n                       suffix=c(\"_default\",\"_subject\"))\n\nRecall that the greater the per-gene deviance, the more likely the expression of said gene is biologically meaningful. Therefore, a decrease in deviance when including batch= subject indicates that subject identity accounted for variation in gene expression that was previously considered to be biologically meaningful. Not all magnitudes of change in deviance are noteworthy, so we examined the change in deviance relative to the final deviance value in the batch effect model.\n\nsubject.df$d.diff = (subject.df$dev_default-subject.df$dev_subject)/subject.df$dev_subject\n\nSince more lowly ranked features are considered more important, an increase in rank when includingbatch= subject indicates that the relative importance of the feature is diminished once subject identity is accounted for.\n\nsubject.df$r.diff = subject.df$rank_subject-subject.df$rank_default\n\nFigure 2.4 Influence of batch on highly deviant genes (n= 3000)\n\n\n\n\n\n\n\n\n\nOur approach suggests that when batch is included in the binomial deviance model, some highly ranked features still show signs of having reductions in deviance that was previously attributed to biological variation. One of these features is RPS4Y1, which is located on the Y chromosome and therefore ought to exhibit substantial between-subject differences based on sex.\n\n\n2.3.2 Spatially variable genes\nNow we will examine whether the change in deviance and the change in rank also highlight SVGs that are potentially subject-biased.\n\ntop.svg.df = filter(subject.df, gene %in% libd.svgs$gene_id)\n\nOur approach indicates that the two genes with the strongest potential to exhibit subject-biased expression patterns in a way that confounds biological variation are also SVGs (MTRNR2L1, MTRNR2L8). In addition we identify Xist as subject-biased. Xist is a lncRNA that is robustly expressed in females due to its importance for X inactivation. The identification of Xist as a subject-biased gene indicates that our approach works as intended (picking up features with non-spatially relevant sources of variation).\nFigure 2.5 Influence of batch on SVGs (n= 1967)",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Exploration with spatialLIBD</span>"
    ]
  },
  {
    "objectID": "spatialLIBD.html#spatial-expression-plots-to-confirm-bias",
    "href": "spatialLIBD.html#spatial-expression-plots-to-confirm-bias",
    "title": "2  Exploration with spatialLIBD",
    "section": "2.4 Spatial expression plots to confirm bias",
    "text": "2.4 Spatial expression plots to confirm bias\nOur approach suggests that even when batch correction is performed, there can still be some highly ranked genes that exhibit the potential for strong subject-bias. Further, three of these potentially biased features are SVGs.\nPlotting the rank difference and relative change in deviance together shows that the mitochondrial genome (grey) has a distinct pattern on no change in rank and many chrM genes have relatively high change in deviance compared to non-biased genes. If we remove the chrM genes (as is often done in feature selection), this leaves two additional features that are outliers from the rest of the top features or SVGs (RPS26 and MT3).\nFigure 2.6 Mitochondrial genome and potential additional biased genes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTo confirm a strong influence of subject/ brain donor for potentially biased genes we looked at the spatial expression plots.\nWe first examine XIST (spatially variable) and RPS4Y1 (highly deviant), given that both genes are located on sex chromosomes and therefore ought to exhibit strong differences in expression between subjects.\nFigure 2.7 Sex-linked genes exhibit strong subject bias\n\n\n\n\n\n\n\n\n\nThe two remaining features with potential subject bias (MTRNR2L1 and MTRNR2L8) are both highly deviant and spatially variable. These lncRNAs have an unknown biological function. Spatial expression plots illustrate that these features display strong subject-biased expression and are also clearly enriched in certain spatial domains. MTRNR2L1 and MTRNR2L8 are perfect examples of features that may introduce noise if included in spatial domain clustering.\nFigure 2.8 Successful identification subject-biased, spatially variable genes\n\n\n\n\n\n\n\n\n\nLastly, RPS26 and MT3 do not display such strong subject-specific expression. This indicates that our original thresholds chosen without consideration of the location of features from the mitochondrial genome was most appropriate.\nFigure 2.9 RPS26 and MT3 should not be excluded due to bias",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Exploration with spatialLIBD</span>"
    ]
  },
  {
    "objectID": "mbv_slide.html",
    "href": "mbv_slide.html",
    "title": "3  MBv: batch = slide",
    "section": "",
    "text": "3.1 Intro to MBv project\nHaving established the ability of the approach with a sample dataset, we now switch gears to look at our own data (MBv dataset).",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>MBv: batch = slide</span>"
    ]
  },
  {
    "objectID": "mbv_slide.html#intro-to-mbv-project",
    "href": "mbv_slide.html#intro-to-mbv-project",
    "title": "3  MBv: batch = slide",
    "section": "",
    "text": "Experimental design\nOur 10X Visium RNAseq dataset was generated from a single sequencing run and contains 24 human DLPFC samples. This is the first portion of a final dataset that will contain 120 samples, so with this subset it is imperative that we learn how to optimize our analysis pipeline.\nEach of the 24 samples was collected from a single brain donor/ subject.\n\nlength(unique(spe$brain))\n\n[1] 24\n\nlength(unique(spe$sample_id))\n\n[1] 24\n\n\nThe samples are organized 4 per slide (6 total slides) with 2 male and 2 female samples per slide.\n\n\n   slide\nsex V13F27-338 V13F27-348 V13Y10-020 V13Y10-021 V13Y10-022 V13Y10-023\n  F          2          2          2          2          2          2\n  M          2          2          2          2          2          2\n\n\nThe first batch effect we sought to investigate in the MBv dataset is batch= slide.\n\n\nGoal of this analysis\nThe goal of this analysis is to perform feature-based QC to remove features contributing to non-spatially meaningful biological variation from our list of spatially variable genes (SVGs).\nAs we showed in the background chapter, using nnSVG for feature selection in the MBv data produced a list of features that represent the spectrum of layer-specific markers in the DLPFC (Figure 1.3). We then demonstrated with the spatialLIBD dataset that SVGs were highly ranked by scry::devianceFeatureSelection.\nWhen we performed the binomial deviance models on the MBv dataset (all features, n=36601), we found that the SVGs were even more highly ranked after inclusion of a batch= slide.\n\n\nSummary of SVG rank:\n\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n    2.0   537.2  1074.5  1103.5  1633.5  2929.0 \n\n\n\n\nSummary of SVG rank (batch= slide):\n\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n    1.0   537.2  1073.5  1104.2  1632.8  3151.0 \n\n\nGiven the high rank of SVGs in the binomial deviance models and the substantial processing time required to run the model on all features, we decided to run devianceFeatureSelection on only the SVGs.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>MBv: batch = slide</span>"
    ]
  },
  {
    "objectID": "mbv_slide.html#binomial-model-deviance-residuals",
    "href": "mbv_slide.html#binomial-model-deviance-residuals",
    "title": "3  MBv: batch = slide",
    "section": "3.2 Binomial model deviance residuals",
    "text": "3.2 Binomial model deviance residuals\n\n#read in the results of both models\nslide.df = read.csv(\"processed-data/bindev_default-slide_svgs-only.csv\")\n\nFigure 3.1 Results of binomial deviance model performed on SVGs only (n= 2098 features)\n\n\n\n\n\n\n\n\n\nTo isolate the influence of batch= slide we calculated the relative change in deviance and the difference in rank as established with the spatialLIBD dataset.\n\n#care about loss of deviance\nslide.df$d.diff = (slide.df$dev_default-slide.df$dev_slide)/slide.df$dev_slide\n# care about increase in rank\nslide.df$r.diff = slide.df$rank_slide-slide.df$rank_default\n\nThese calculations distinguish several SVGs as potentially biased but altogether exhibited smaller magnitude changes compared to the subject effect in the spatialLIBD data (Figure 2.4).\nFigure 3.2 Difference in deviance and rank distinguish outliers (n= 2098)",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>MBv: batch = slide</span>"
    ]
  },
  {
    "objectID": "mbv_slide.html#examining-potentially-biased-expression-patterns-with-a-dotplot",
    "href": "mbv_slide.html#examining-potentially-biased-expression-patterns-with-a-dotplot",
    "title": "3  MBv: batch = slide",
    "section": "3.3 Examining potentially biased expression patterns with a dotplot",
    "text": "3.3 Examining potentially biased expression patterns with a dotplot\nEven though the influence of batch= slide was more subtle than expected from the spatialLIBD data, our difference metrics still clealy distinguished a small number of potentially biased SVGs.\n\nbiased.genes = filter(slide.df, r.diff&gt;300 | d.diff&gt;.5)$gene\nnames(biased.genes) = rowData(spe)[biased.genes,\"gene_name\"]\n\nWe found that of the seven total potentially slide-biased genes, only 2-3 (MTRNR2L12, AL627171.2, and maybe MTRNR2L8) displayed expression patterns indicative of slide-specific influence. For the remaining features (MTRNR2L1, SERPINA3, CHI3L1, C5orf63), although the average slide expression may indicate a slide batch effect, the dotplot suggests that individual samples drive these differences.\nFigure 3.3 Summary of potentially slide-biased genes",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>MBv: batch = slide</span>"
    ]
  },
  {
    "objectID": "mbv_slide.html#spatial-expression-plots",
    "href": "mbv_slide.html#spatial-expression-plots",
    "title": "3  MBv: batch = slide",
    "section": "3.4 Spatial expression plots",
    "text": "3.4 Spatial expression plots\nTo support the influence of slide on the expression of these potentially biased genes we looking at the unscaled logcount expression for each sample, reconstructing the initial 2D coordinates.\nThese plots confirm the conclusions from the dotplot that MTRNR2L12 and AL627171.2 exhibit slide-biased expression with increased abundance in the first two slides. For these figures each row corresponds to a single slide, and the tissue samples are displayed in the order they are positioned on the slide.\nFigure 3.4 Identification two slide-biased SVGs in the MBv dataset\n\n\n\n\n\n\n\n\n\nHowever, MTRNR2L8 clearly is most influenced by sample-specific variation rather than slide.\nFigure 3.5 MTRNR2L8 expression is augmented in a single subject",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>MBv: batch = slide</span>"
    ]
  },
  {
    "objectID": "mbv_slide.html#sample-specific-bias",
    "href": "mbv_slide.html#sample-specific-bias",
    "title": "3  MBv: batch = slide",
    "section": "3.5 Sample-specific bias?",
    "text": "3.5 Sample-specific bias?\nAs we established with the spatialLIBD example, there can be subject-specific expression patterns that have the potential to confound spatial domain clustering (Figure 2.6, Figure 2.8). Our experimental design includes only one sample per subject, such that no two samples came from the same brain donor. Thus, any batch effect of subject and sample are indistinguishable.\nThe concern with examining sample-specific variation in gene expression within our dataset (and potentially any SRT dataset) is that the proportion of observations corresponding to the different spatial domains varies across samples. Despite considerable efforts to collect tissue sections that are representative of all DLPFC layers, there are between-sample (aka between-subject) differences in tissue composition.\nWe used the original raw SVG clusters (K=7; Figure 1.1) as a rough guide to see how tissue composition changed across samples. We combined the two L1 clusters and removed the L5/6 cluster since the merging of two layers might skew some samples more than others. We can see that Br5902 has a substantially higher proportion of WM spots than the other samples.\nFigure 3.6 Most domains are evenly distributed across subjects, with one exception in WM\n\n\n\n\n\n\n\n\n\n\n3.5.1 Do WM spots account for expression of some subject-biased genes?\nOur approach to identifying biased genes would be problematic/ ineffective if applying a batch= subject effect to the binomial deviance model identified key layer markers as subject-biased. Notably, the subject with an uncommonly high number of WM spots (Br5902) is also the subject that appears to contribute to the identification of MTRNR2L1, SERPINA3, and CHI3L1 as subject/sample-biased (Figure 3.3).\nTo see if WM spots were likely to drive the bias in these 3 features, we compared the expression of known WM markers across rough spatial domains to the expression of MTRNR2L1, SERPINA3, and CHI3L1. If the potentially Br5902-biased features exhibited similar expression patterns across spatial domains as the known WM markers, then it is possible that tissue composition is responsible for the identification of these features as potentially biased.\nFigure 3.7 Expression of MTRNR2L1, SERPINA3, and CHI3L1 does not indicate an influence of tissue composition\n\n\n\n\n\n\n\n\n\nWe observed that unlike standard WM markers (left), the expression of MTRNR2L1, SERPINA3, and CHI3L1 expression are relatively equal across different spatial domains (right), both for the apparent outlier Br5902 and in other slides/samples. This suggests that our approach to identifying biased features is not sensitive to differences in tissue composition.\nTo confirm this, we again visualized the unscaled logcounts, juxtaposing MBP expression (denoting WM) with the potentially subject-biased genes. We display only the first two slides for ease of comparison.\nFigure 3.8 Confirmation that WM spots do not drive subject-bias of MTRNR2L1, SERPINA3, and CHI3L1\n\n\n\n\n\n\n\n\n\nWe conclude that none of the potentially subject-biased genes flagged by the addition of batch= slide reflect meaningful differences in tissue composition.\n\n\n3.5.2 Moving forwards\nIt is important to note that the 5 potentially subject-biased SVGs identified here were flagged when considering the influence of batch= slide. Next we will explore the impact of batch= subject, checking for a potential influence of tissue composition before proceeding.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>MBv: batch = slide</span>"
    ]
  },
  {
    "objectID": "mbv_subject.html",
    "href": "mbv_subject.html",
    "title": "4  MBv: batch = subject",
    "section": "",
    "text": "4.1 Find subject-biased features\nWe performed the scry::devianceFeatureSelection with batch= subject on only the 2098 SVGs.\nbrain.df = read.csv(\"processed-data/bindev_default-brain_svgs-only.csv\")\nTo isolate the influence of batch= subject we calculated the relative change in deviance and the difference in rank.\n# care about loss in deviance\nbrain.df$d.diff = (brain.df$dev_default-brain.df$dev_brain)/brain.df$dev_brain\n# care about increase in rank\nbrain.df$r.diff = brain.df$rank_brain-brain.df$rank_default\nFigure 4.1 Subject identity generates greater and more continuous changes in deviance and rank than slide identity\nThe influence of batch= subject is greater in magnitude than that of batch= slide as determined by the ranges of relative change in deviance and rank difference in each model.\nFigure 4.2 Inclusion of subject identity in the binomial deviance model is more impactful than slide\nAlso, these changes are more continuous (Figure 4.1), complicating the selection of a specific value for either metric to isolate potentially subject-biased genes.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>MBv: batch = subject</span>"
    ]
  },
  {
    "objectID": "mbv_subject.html#improved-method-for-selecting-biased-genes",
    "href": "mbv_subject.html#improved-method-for-selecting-biased-genes",
    "title": "4  MBv: batch = subject",
    "section": "4.2 Improved method for selecting biased genes",
    "text": "4.2 Improved method for selecting biased genes\nWe decided to explore cutoffs based on the standard deviance (SD) of deviance and rank difference metrics to find a data-driven thresholding approach.\n\n4.2.1 SD cutoff: deviance\nThe wide range of relative change in deviance resulting from the inclusion of batch= subject was evident in the fact that some features were as many as 30 SDs away from the mean.\n\nmean1 = mean(brain.df$d.diff)\nsd1 = sd(brain.df$d.diff)\nbrain.df$nSD_dev = (brain.df$d.diff-mean1)/sd1\nsummary(brain.df$nSD_dev)\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n-0.30998 -0.23548 -0.17844  0.00000 -0.03646 30.97281 \n\n\nSince our goal is to identify only the most strongly biased features that have the potential to impair spatial domain clustering, we explored thresholds based on the number of deviations (nSD) starting with nSD=5 with a step-size of 5.\nFigure 4.3 SVGs with relative change in deviance &gt;= 5 SDs from the mean appear to represent subject-biased genes\n\n\n\n\n\n\n\n\n\nThe nSD bins split the SVGs such that a nSD cutoff&gt;=5 separated features with a continuous distribution of delta deviance from the outliers.\nFive of the SVGs with a nSD deviance&gt;=5 were already identified and confirmed as biased: MTRNR2L12 (Figure 3.4), MTRNR2L8 (Figure 3.5), MTRNR2L1 (Figure 3.8), SERPINA3 (Figure 3.8), CHI3L1 (Figure 3.8). XIST was also identified as a subject-biased SVG. We spot-checked the remaining 6 potentially subject-biased SVGs to verify that this threshold truly captured subject-driven noise.\nOf these remaining 5 SVGs, 3 were close to the cutoff of nSD&gt;=5 (SPP1, HSPB1, HSPA1B).\n\n\n             gene gene_name    d.diff   nSD_dev nSD.bin_dev\n1 ENSG00000118785      SPP1 0.6194321  5.297364      [5,10)\n2 ENSG00000106211     HSPB1 0.6210194  5.311771      [5,10)\n3 ENSG00000204388    HSPA1B 0.6617434  5.681404      [5,10)\n4 ENSG00000132002    DNAJB1 0.9985636  8.738561      [5,10)\n5 ENSG00000204389    HSPA1A 1.3466700 11.898158     [10,15)\n\n\nSPP1 was the only subject-biased SVG (identified by a relative change in deviance threshold nSD&gt;=5) that displayed elevated expression specifically in spots of a single spatial domain.\nFigure 4.4 SPP1 exhibits enrichment within a specific DLPFC spatial domain\n\n\n\n\n\n\n\n\n\nSlides V13F27-338, V13F27-348, and V13Y10-023 appeared to contain samples/ subjects with outlier SPP1 expression. We compared the spatial expression of SPP1 with that of MBP to examine if enrichment in WM spots was contributing the elevated expression in subjects on these slides.\nFigure 4.5 SPP1 is definitively subject-biased and spatially variable\n\n\n\n\n\n\n\n\n\nWe conclude that although SPP1 is correlated with MBP expression in some samples/ subjects, there are also strong subject-specific expression patterns unrelated to WM (Br5902, Br5993, Br8092). SPP1 is the perfect example of a gene we want to exclude because it is associated with spatial domains for some subjects/samples but is definitively errant in others. Although this may be of interest down the line when testing for differential expression between conditions, SPP1 seems poised to introduce noise to spatial clustering results if included in the input SVG list.\nAt this point we were satisfied with a threshold of 5 standard deviations from the mean relative change in deviance.\n\nbrain.df$dev_outlier = brain.df$nSD_dev&gt;=5\n\n\n\n4.2.2 SD cutoff: rank\nThe dispersion of rank difference introduced with the inclusion of batch= subject was less than that of relative change in deviance (the furthest outlier feature was only 11 SDs away from the mean rank difference, compared to 30).\n\nmean2 = mean(brain.df$r.diff)\nsd2 = sd(brain.df$r.diff)\nbrain.df$nSD_rank = (brain.df$r.diff-mean1)/sd2\nsummary(brain.df$nSD_rank)\n\n     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. \n-0.907385 -0.428725 -0.239781 -0.000451  0.037338 11.512571 \n\n\nBecause of this reduced range we explored thresholds based on nSD of rank difference in steps of 3 or 5.\nFigure 4.6 Viable nSD(rank difference) cutoffs at 5 or 6\n\n\n\n\n\n\n\n\n\nBased on how the different bin sizes tracked with the distribution of SVG rank difference after the inclusion of batch= subject, we determined that an appropriate threshold occurred either at nSD&gt;=5 or nSD&gt;=6.\n\nfilter(brain.df, between(nSD_rank,5,7)) %&gt;% arrange(desc(nSD_rank)) %&gt;%\n  select(gene_name, r.diff, nSD_rank)\n\n   gene_name r.diff nSD_rank\n1       XIST    547 6.889727\n2 AL627171.2    545 6.864535\n3   C11orf96    536 6.751168\n4      NEAT1    517 6.511838\n5     CLDN11    463 5.831638\n6       MT1M    447 5.630097\n7      HSPB1    442 5.567115\n8      PLPP3    407 5.126245\n\n\nOf the SVGs on the cusp of being potentially subject-biased as determined by rank difference, XIST, AL627171.2, and HSPB1 have already been evaluated.\nFigure 4.7 Potential subject-biased SVGs with nSD rank difference &lt;6 do not exhibit strong outliers\n\n\n\n\n\n\n\n\n\nWe can see that unlike the potential subject-biased features in Figure 4.5 and the bottom of Figure 4.8, the SVGs with nSD rank difference &lt;6 do not exhibit strong single-subject outliers. Additionally, CLDN11 stands out as a possible marker for WM that may not be truly biased by subject but may actually reflect varying tissue composition.\nLooking at a the unscaled logcounts expression confirms that CLDN11 is just spatially variable and correlated with MBP and does not not exhibit any further subject bias.\nFigure 4.8 CLDN11 expression differences between subjects is driven by tissue composition\n\n\n\n\n\n\n\n\n\nChecking the two remaining SVGs with nSD rank difference &lt;6 establishes that PLPP3 does not exhibit any subject bias and the between-subject impact on MT1M expression is so-so.\nFigure 4.9 Weak or absent subject bias in two remaining SVGs with nSD rank difference &lt;6\n\n\n\n\n\n\n\n\n\nCompare that to C11orf96 and NEAT1, which according to Figure 4.8 have subject outliers in slides V13F27-338 and V13F27-348. When viewing spatial expression plots for those two slides and also slide V13Y10-023 (which doesn’t appear to have a subject outlier), we can see that C11orf96 expression is subject-biased, although NEAT1 expression appears to mostly correlate with WM.\nFigure 4.10 C11orf96 expression appears to be correlated with WM in some samples but not others and also exhibit subject bias\n\n\n\n\n\n\n\n\n\nWe are not proposing a comprehensive, feature-by-feature decision making process to generate the perfect list of SVGs. Therefore, presented with the choice between a subject bias threshold of nSD rank difference&gt;=5 or &gt;=6, we believe that opting for the slightly stricter threshold of &gt;=6 SD from the mean rank difference is appropriate.\n\nbrain.df$rank_outlier = brain.df$nSD_rank&gt;=6",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>MBv: batch = subject</span>"
    ]
  },
  {
    "objectID": "mbv_subject.html#cluster-results",
    "href": "mbv_subject.html#cluster-results",
    "title": "4  MBv: batch = subject",
    "section": "4.3 Cluster results",
    "text": "4.3 Cluster results\nWe isolate biased genes by the data-driven nSD thresholds for the change in deviance and rank introduced with a batch= subject effect. In exploring the influence of batch= subject, the threshold chosen included all features also identified as slide-biased with batch= slide.\n\nbiased.genes = filter(brain.df, dev_outlier==T | rank_outlier==T)$gene\nnames(biased.genes) = rowData(spe)[biased.genes,\"gene_name\"]\nlength(biased.genes)\n\n[1] 18\n\n\nFigure 4.11 Final biased features to remove from SVG list prior to spatial domain clustering\n\n\n\n\n\n\n\n\n\nFinally, we performed PRECAST clustering to identify spatial domains after removing all subject-biased SVGs (n=18) from the feature list.\nOur method proved successful and our goal was achieved; removing biased SVGs enabled the distinction of L5 and L6.\nFigure 4.12 PRECAST clusters: 2080 input features (SVGs minus 18 biased), K=7\n\n\n\n\n\n\n\n\n\nThe exclusion of an additional 3 genes (CLDN11, PLPP3, MT1M) that would have occurred with the nSD(rank)&gt;=5 threshold had a surprisingly large impact on cluster results (losing the L5 and L6 distinction in favor for a small, noisy cluster most closely linked with L1).\nFigure 4.13 PRECAST clusters: 2077 input features (SVGs minus 21 biased), K=7",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>MBv: batch = subject</span>"
    ]
  },
  {
    "objectID": "to_explore.html",
    "href": "to_explore.html",
    "title": "5  Things to look into further",
    "section": "",
    "text": "5.1 modelGeneVar vs poisson distribution",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Things to look into further</span>"
    ]
  },
  {
    "objectID": "to_explore.html#modelgenevar-vs-poisson-distribution",
    "href": "to_explore.html#modelgenevar-vs-poisson-distribution",
    "title": "5  Things to look into further",
    "section": "",
    "text": "5.1.1 poisson model not reproducible\nWe observed that even with the same seed, the scran::modelGeneVarByPoisson function does not return identical variance results, leading to changes in rank that can be impactful when looking at HVGs.\n\nset.seed(123)\n\n\nlibrary(spatialLIBD)\nspe &lt;- fetch_data(type = \"spe\")\n\nThe modelGeneVar function and scry::devianceFeatureSelection function both produce identical results with different runs.\n\nmv &lt;- modelGeneVar(logcounts(spe))\nmv1 &lt;- modelGeneVar(logcounts(spe))\n\n\nbd &lt;- devianceFeatureSelection(counts(spe), fam=\"binomial\")\nbd1 &lt;- devianceFeatureSelection(counts(spe), fam=\"binomial\")\n\n\nidentical(mv[,\"bio\"], mv1[,\"bio\"])\n\n[1] TRUE\n\nidentical(bd, bd1)\n\n[1] TRUE\n\n\nThe modelGeneVarByPoisson function does not.\n\nmvp &lt;- modelGeneVarByPoisson(logcounts(spe))\nmvp1 &lt;- modelGeneVarByPoisson(logcounts(spe))\n\n\nidentical(mvp[,\"bio\"], mvp1[,\"bio\"])\n\n[1] FALSE\n\n\nFigure S1. Minor changes in variance produced by different poisson model runs impact rank\n\n\n\n\n\n\n\n\n\n\n\n5.1.2 difference due to batch effect\n\nmodelGeneVar\nUsing the modelGeneVar function, the difference in gene rank due to batch= subject does not identify possibly subject-biased genes.\n\nmv.batch &lt;- modelGeneVar(logcounts(spe), block=as.factor(spe$subject))\n\nFigure S2. Comparison of feature rank with and without subject batch\n\n\n\n\n\n\n\n\n\nThings to note: weird ties a 20k, massive spread (compare to Figure S8), two groups ranked highly with one model and not another.\nWe looked at both group 1 and group 2 genes to see if they exhibit true subject-biased expression. Plots showing average expression of each sample across spatial domain show that many of these features exhibit graded expression across cortical layers suggesting that they are actually spatially variable. There is also a notable absence of outliers (which are seen with true subject-biased expression).\nFigure S3. Features flagged by the mean-variance model are not subject-biassed\n\n\n\n\n\n\n\n\n\nOther than RPS26 (explored in Figure 2.9), RAPGEF5 exhibited the greatest difference in expression between subjects. However, looking at the spatial expression of RAPGEF5 indicates no subject bias.\nFigure S4. RAPGEF5 is not biased by subject but correlates with WM\n\n\n\n\n\n\n\n\n\n\n\nmodelGeneVarByPoisson\nUsing the modelGeneVarByPoisson function does identify some rank differences due to batch= subject but are inconsistent (reproducibility). Using the poisson assumptions for technical variation reduced the number of features that were highly ranked with batch= NULL and highly ranked with batch= subject (compared to modelGeneVar).\n\nmvp.batch &lt;- modelGeneVarByPoisson(logcounts(spe), block=as.factor(spe$subject))\n\nFigure S5. Feature ranks based on mean-variance modeling are not consistent when batch effects are added\n\n\n\n\n\n\n\n\n\nThe small changes in variance between identical models can lead to changes in top ranked features and thus alter which genes are available to examine for subject-bias.\nFigure S6. Top 3k features: Introduction of batch to poisson mean-variance model and inconsistencies between runs\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure S7. COMMD6 expression is not influenced by subject identity",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Things to look into further</span>"
    ]
  },
  {
    "objectID": "to_explore.html#odd-sinusoidal-pattern-in-binomial-deviance-model",
    "href": "to_explore.html#odd-sinusoidal-pattern-in-binomial-deviance-model",
    "title": "5  Things to look into further",
    "section": "5.2 Odd sinusoidal pattern in binomial deviance model?",
    "text": "5.2 Odd sinusoidal pattern in binomial deviance model?\nWe found an add sinusoidal pattern emerges when comparing ranks from scry::devianceFeatureSelection with any dataset. This only occurs in the worst ranking features and so doesn’t appear when limiting the binomial deviance model to SVGs. We would anticipate increased noise in the relationship between ranks produced from the different models (with and without batch), but this structured pattern is odd.\n\n5.2.1 spatialLIBD\n\nbd &lt;- devianceFeatureSelection(counts(spe), fam=\"binomial\")\nbd.batch &lt;- devianceFeatureSelection(counts(spe), fam=\"binomial\", \n                                     batch=as.factor(spe$subject))\n\nFigure S8. Influence of subject identity on rank calculated from binomial deviance model (all features)\n\n\n\n\n\n\n\n\n\nThis is true when we change the seed.\n\nset.seed(456)\nbd2 &lt;- devianceFeatureSelection(counts(spe), fam=\"binomial\")\nbd2.batch &lt;- devianceFeatureSelection(counts(spe), fam=\"binomial\", \n                                     batch=as.factor(spe$subject))\n\nFigure S9. The linear relationship between feature ranks and the sinusoidal pattern are reproducible with different random number seeds\n\n\n\n\n\n\n\n\n\n\n\n5.2.2 MBv dataset\nThe effect is also seen in our MBv dataset.\nFigure S10. Sinusoidal pattern in MBv data when comparing two different batch effects",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Things to look into further</span>"
    ]
  }
]