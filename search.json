[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Find Biased Features",
    "section": "",
    "text": "1 Background",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Background</span>"
    ]
  },
  {
    "objectID": "index.html#the-importance-of-feature-selection",
    "href": "index.html#the-importance-of-feature-selection",
    "title": "Find Biased Features",
    "section": "1.1 The importance of feature selection",
    "text": "1.1 The importance of feature selection\nA crucial step in single cell and single nucleus RNAseq analysis pipelines is the use of clustering algorithms generate groups of cells/nuclei with similar gene expression patterns. These clusters are often necessary to classify observations (cells/nuclei) based on cell state (cell type, developmental stage, etc.) to unleash the potential of the single cell/ nucleus approach.\nClusters are generated based on patterns of expression of a subset of features, and the selection of these features is highly influential to the downstream results. When selecting features for dimension reduction and clustering, genes from the mitochondrial genome, known sex-linked genes, or cell cycle genes (depending on the dataset) are often removed from consideration. These “biological quality controls” can help produce clusters representing desired cell state by removing expression patterns linked to donor sex or cell size.\nSince canonical cell state marker genes will be highly expressed in one subset of observations and lowly expressed or absent in all others, common feature selection methods identify genes with highly variable expression within the dataset. Such methods often rely on modeling the mean-variance relationship and allow for the consideration of potential batch effects in these models. Batch consideration enables data-driven exclusion of features that capture technical noise or biological differences not relevant to the classification of cell state.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Background</span>"
    ]
  },
  {
    "objectID": "index.html#feature-selection-in-spatial-transcriptomics",
    "href": "index.html#feature-selection-in-spatial-transcriptomics",
    "title": "Find Biased Features",
    "section": "1.2 Feature selection in spatial transcriptomics",
    "text": "1.2 Feature selection in spatial transcriptomics\nIn spatially resolved transcriptomics (SRT), the individual observations are not single cells or single nuclei, but rather single points in 2D space (on a tissue section). These x- and y-coordinates are preserved through sequencing, such that the processed transcriptomic data can reconstruct gene expression patterns that vary across different regions of tissue present in the same section. The goal of clustering in SRT datasets is often to use gene expression patterns to identify known spatial domains (e.g., different cortical layers of the brain).\nThe extra spatial dimension (x/y coordinates) in SRT can be capitalized upon to identify features that have variable expression not only between observations but between different regions of the tissue section (spatially variable genes or SVGs). SVG selection methods often out-perform classic single cell or nuclei methods in generating features that recapitulate known spatial domains.\nHowever, SVG selection methods do not permit for the consideration of user-defined batch effects that may introduce technical noise or other sources of variation that may prevent or distort spatial domains.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Background</span>"
    ]
  },
  {
    "objectID": "index.html#the-problem",
    "href": "index.html#the-problem",
    "title": "Find Biased Features",
    "section": "1.3 The problem",
    "text": "1.3 The problem\nWhile analyzing a 10X Visium SRT dataset from the human DLPFC, we recognized the need to evaluate our SVGs for the potential influence of batch effects in order to optimize spatial domain clustering\nWe used nnSVG to select 2098 statistically significant SVGs and then used PRECAST to identify clusters that hopefully strongly corresponded to the cortical layers in the DLPFC. Using K=7 or K=8, we were unable to distinguish L5 from L6 with this set of features. We also identified a cluster of observations that appeared to be driven by low UMI count rather than expression of SVGs.\nFigure 1. PRECAST clusters: 2098 input features (SVGs), K=7\n\n\n\n\n\n\n\n\n\nFigure 2. PRECAST clusters: 2098 input features (SVGs), K=8\n\n\n\n\n\n\n\n\n\nThe lack of distinction between L5 and L6 did not appear to be due under-representation of known gene markers for these cortical layers in the SVG set. (DLPFC layer markers pulled from Huuki-Meyers et. al, 2024 Table S8.)\nFigure 3. The SVG set comprises known marker genes for all DLPFC layers.\n\n\n\n\n\n\n\n\n\nNevertheless, we supplemented the SVG set with the most significant markers for each cortical layer (top 100 lowest FDR for each layer), adding 327 features to the input for clustering. We found that the number of L5 and L6 markers increased mildly, indicating that the most striking L5 and L6 markers were already included in the SVG list.\nFigure 4. Adding the most significant marker genes marginally increases the SVG set.\n\n\n\n\n\n\n\n\n\nSupplementing the SVGs with additional layer markers did not improve spatial domain clustering with PRECAST at K=7 or K=8.\nFigure 5. PRECAST clusters: 2425 input features (SVGs + layer markers), K=7\n\n\n\n\n\n\n\n\n\nFigure 6. PRECAST clusters: 2425 input features (SVGs + layer markers), K=8\n\n\n\n\n\n\n\n\n\nThis led us to hypothesize that a small number of features within the SVG list were capturing technical variation in gene expression that that these “noisy” features were more prominent in some samples vs others.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Background</span>"
    ]
  },
  {
    "objectID": "index.html#the-goal",
    "href": "index.html#the-goal",
    "title": "Find Biased Features",
    "section": "1.4 The goal",
    "text": "1.4 The goal\nOur goal is to use feature selection methods designed for single cell/nuclei RNAseq that can account for batch effects to characterize SVGs. By examining the per-gene variance and rank with and without a batch effect, we aim to identify features that could be driving these effects. Removing these SVGs from the feature set may improve how the resulting clusters correspond to known DLPFC spatial domains.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Background</span>"
    ]
  },
  {
    "objectID": "spatialLIBD.html",
    "href": "spatialLIBD.html",
    "title": "2  Rationale with spatialLIBD",
    "section": "",
    "text": "2.1 Intro\nWe chose to develop our method on an unrelated DLPFC dataset available through the spatialLIBD package. This way we can explore how to identify batch-biased features while being blinded to how the approach will impact our dataset.\nFirst, we chose a feature selection method that can incorporate a batch variable into the model. Next, we compared the per-gene ranks and dispersion values when the model was run with and without a batch effect. Finally, we confirmed that the genes identified as biased did exhibit expression patterns consistent with non-biological technical noise.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Rationale with spatialLIBD</span>"
    ]
  },
  {
    "objectID": "spatialLIBD.html#intro",
    "href": "spatialLIBD.html#intro",
    "title": "2  Rationale with spatialLIBD",
    "section": "",
    "text": "2.1.0.1 spatialLIBD example dataset\nThe spatialLIBD dataset was collected from the same brain region as our data (DLPFC) and was also sequenced with 10X Visium. This dataset has 3 subjects and 4 samples from each subject. Because there was no slide metadata available, we investigated whether batch = subject influenced the top features.\n\nspe &lt;- fetch_data(type = \"spe\")\n\n\n\n         subject\nsample_id Br5292 Br5595 Br8100\n   151507   4226      0      0\n   151508   4384      0      0\n   151509   4789      0      0\n   151510   4634      0      0\n   151669      0   3661      0\n   151670      0   3498      0\n   151671      0   4110      0\n   151672      0   4015      0\n   151673      0      0   3639\n   151674      0      0   3673\n   151675      0      0   3592\n   151676      0      0   3460",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Rationale with spatialLIBD</span>"
    ]
  },
  {
    "objectID": "spatialLIBD.html#feature-selection-comparison",
    "href": "spatialLIBD.html#feature-selection-comparison",
    "title": "2  Rationale with spatialLIBD",
    "section": "2.2 Feature selection comparison",
    "text": "2.2 Feature selection comparison\nWe examined two different models of feature selection. The first model is from scran and utilizes per-gene variance to identify top features. This method, here referred to as the mean-variance model, is performed after normalization on the logcount matrix. We opted to use the modelGeneVarByPoisson function which assumes that the mean-variance relationship trend due to technical noise follow a poisson distribution.\n\ndecp &lt;- modelGeneVarByPoisson(logcounts(spe))\n\nThe second approach from scry fits a model to raw counts matrix and assumes that genes with no biologically meaningful expression pattern will fit a binomial distribution. The greater the per-gene deviance from this null model, the more likely the expression of said gene is biologically meaningful as a top feature. We refer to this method as the binomial deviance model.\n\nbd &lt;- devianceFeatureSelection(spe, fam=\"binomial\")\n\n\n2.2.1 How do SVGs rank in each model?\nOur goal is to determine whether SVGs exhibit biased expression according of different batch variables. Therefore, the ideal feature selection model would similarly identify SVGs as highly ranked features.\nWe ran the nnSVG model on the spatialLIBD data to identify SVGs. We next examined the rank of these features in the mean-variance model and the binomial deviance model.\n\nlibd.svgs = read.csv(\"processed-data/libd-all_nnSVG_p-05-features-df.csv\", row.names=1)\n\nWe found that the mean-variance model ranked a considerable portion of the SVGs as some of the lowest features in the dataset. In contrast, all the SVGs were ranked highly with the binomial deviance model.\nFigure X\n\n\n\n\n\n\n\n\n\n\n\n2.2.2 Are top ranked genes representative of layer-specific differences in gene expression?\nA separate but related property of the ideal feature selection model would be to generate a list of top features that are consistent with known DLPFC layer markers and comprise markers of all layer domains. We used the recently published list of DLPFC layer markers from Huuki-Meyers et. al, 2024 Table S8 to characterize the top 3000 features of the mean-variance and binomial deviance models.\n\nlm.df = read.csv(\"processed-data/EXT_TableS8_sig_genes_FDR5perc_enrichment.csv\")\nlm.df = filter(lm.df, spatial_domain_resolution==\"Sp09\", fdr&lt;.05, stat&gt;0) %&gt;%\n  mutate(domain_simple=factor(test, levels=paste0(\"Sp09D0\",c(1,2,3,5,8,4,7,6,9)),\n                              labels=c(\"L1\",\"L1\",\"L2\",\"L3\",\"L4\",\"L5\",\"L6\",\"WM\",\"WM\")))\n\nThese results further supported the selection of the binomial deviance model, as the 3000 most highly ranked features represented significant markers for all DLPFC cortical layers. In contrast, the 3000 most highly ranked features from the mean-variance model were overwhelmingly L1 and white matter (WM) markers.\nFigure X",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Rationale with spatialLIBD</span>"
    ]
  },
  {
    "objectID": "spatialLIBD.html#influence-of-batch-in-binomial-deviance-model-output",
    "href": "spatialLIBD.html#influence-of-batch-in-binomial-deviance-model-output",
    "title": "2  Rationale with spatialLIBD",
    "section": "2.3 Influence of batch in binomial deviance model output",
    "text": "2.3 Influence of batch in binomial deviance model output\nHaving picked a feature selection method, next we compared the per-gene ranks and deviance values when the model was run with and without a batch effect. Because the spatialLIBD data has 4 samples per subject, we used batch= subject.\n\nbd.batch &lt;- devianceFeatureSelection(spe, fam=\"binomial\", batch=as.factor(spe$subject))\n\nAt a first glance, including a subject-batch effect doesn’t dramatically change the rank of the SVGs. This finding suggests that scry::devianceFeatureSelection could be a good alternative to nnSVG feature selection if there is considerable technical variation in the experiment/ dataset. It can also be run much faster.\nFigure X\n\n\n\n\n\n\n\n\n\n\nmax(bd.df[libd.svgs$gene_id,\"rank\"])\n\n[1] 4077\n\nmax(bd.batch.df[libd.svgs$gene_id,\"rank\"])\n\n[1] 5903\n\n\nNow we can examine the influence of batch= subject on the per-gene deviance values and ranks. Since we propose that using a binomial deviance model to select top features is a possible alternative to nnSVG feature selection\n\nsubject.df &lt;- left_join(bd.df, bd.batch.df,\n                       by=c(\"gene\", \"gene_name\"),\n                       suffix=c(\"_default\",\"_subject\"))\n\nRecall that the greater the per-gene deviance, the more likely the expression of said gene is biologically meaningful. Therefore, a decrease in deviance when including batch= subject indicates that subject identity accounted for variation in gene expression that was previously considered to be biologically meaningful. Not all magnitudes of change in deviance are noteworthy, so we examined the change in deviance relative to the final deviance value in the batch effect model.\n\nsubject.df$d.diff = (subject.df[,\"dev_default\"]-subject.df[,\"dev_subject\"])/subject.df$dev_subject\n\nSince more lowly ranked features are considered more important, an increase in rank when includingbatch= subject indicates that the relative importance of the feature is diminished once subject identity is accounted for.\n\nsubject.df$r.diff = subject.df[,\"rank_subject\"]-subject.df[,\"rank_default\"]\n\nFigure X. Influence of batch on deviance and rank\n\n\n\n\n\n\n\n\n\nWe can see that the mitochondrial genome (often removed from feature lists) exhibits no change in rank but several genes show relatively strong change in deviance residuals with batch= subject.\n\n\n\n\n\n\n\n\n\nMoving on now to look at SVGS.\n\ntop.svg.df = filter(subject.df, gene %in% libd.svgs$gene_id)\n#subject.df &lt;- mutate(subject.df, is_svg= factor(gene %in% libd.svgs$gene_id,\n#                                                levels=c(TRUE, FALSE),\n#                                                labels=c(\"SVGs\",\"not SVGs\")))\n\nFigure X. Influence of batch on top genes, SVGs in red\n\n\n\n\n\n\n\n\n\nOur approach suggests that even when batch correction is performed, there can still be some highly ranked genes that exhibit the potential for strong subject-bias. Further, three of these potentially biased features are SVGs.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Rationale with spatialLIBD</span>"
    ]
  },
  {
    "objectID": "spatialLIBD.html#confirm-with-spatial-expression-plots",
    "href": "spatialLIBD.html#confirm-with-spatial-expression-plots",
    "title": "2  Rationale with spatialLIBD",
    "section": "2.4 Confirm with spatial expression plots",
    "text": "2.4 Confirm with spatial expression plots\nTo confirm a strong influence of subject/ brain donor for these genes we looked at the spatial expression plots.\nXist is a lncRNA that is robustly expressed in females due to its importance for X inactivation. The identification of Xist as a subject-biased gene indicates that our approach works as intended (picking up features with non-spatially relevant sources of variation). Although sex information is not provided in the spatialLIBD example dataset, we can be confident that\n\n\n\n\n\n\n\n\n\nThe other two genes, MTRNR2L1 and MTRNR2L8, are also lncRNAs with an unknown biological function. These two features exhibit strong subject-biased expression and are also clearly enriched in certain spatial domains.\nThese are perfect examples of features that may introduce noise if included in spatial domain clustering.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Rationale with spatialLIBD</span>"
    ]
  },
  {
    "objectID": "mbv_slide.html",
    "href": "mbv_slide.html",
    "title": "3  MBv: batch = slide",
    "section": "",
    "text": "3.1 Intro to MBv project",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>MBv: batch = slide</span>"
    ]
  },
  {
    "objectID": "mbv_slide.html#intro-to-mbv-project",
    "href": "mbv_slide.html#intro-to-mbv-project",
    "title": "3  MBv: batch = slide",
    "section": "",
    "text": "3.1.0.1 Goal of this analysis\nAs established in the Intro[LINK CHAPTER], the goal of this analysis is to perform feature-based QC to remove features contributing to non-spatially meaningful biological variation from our list of spatially variable genes (SVGs).\nAs we showed in the spatialLIBD example, using nnSVG or scry::devianceFeatureSelection produced feature lists that represented the spectrum of layer-specific markers in the DLPFC (FIGURE). Further, SVGs were the most highly ranked features based on deviance (FIGURE), when all genes were input to the model.\nBecause of this, we decided to run devianceFeatureSelection on only the SVGs.\n\n\n3.1.0.2 Experimental design\n24 human DLPFC samples, 1 sample per subject/ brain donor, 4 samples per slide (6 slides), 2 M 2 F each slide\nWe first investigated a slide effect.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>MBv: batch = slide</span>"
    ]
  },
  {
    "objectID": "mbv_slide.html#binomial-model-deviance-residuals",
    "href": "mbv_slide.html#binomial-model-deviance-residuals",
    "title": "3  MBv: batch = slide",
    "section": "3.2 Binomial model deviance residuals",
    "text": "3.2 Binomial model deviance residuals\nBased on\n\nslide.df = read.csv(\"processed-data/bindev_default-slide_svgs-only.csv\")\n\n\n\n\n\n\n\n\n\n\n\n#care about loss of deviance\nslide.df$d.diff = (slide.df[,\"dev_default\"]-slide.df[,\"dev_slide\"])/slide.df$dev_slide\n# care about increase in rank\nslide.df$r.diff = slide.df[,\"rank_slide\"]-slide.df[,\"rank_default\"]",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>MBv: batch = slide</span>"
    ]
  },
  {
    "objectID": "mbv_slide.html#examine-expression-with-dotplot",
    "href": "mbv_slide.html#examine-expression-with-dotplot",
    "title": "3  MBv: batch = slide",
    "section": "3.3 Examine expression with dotplot",
    "text": "3.3 Examine expression with dotplot\n\nbiased.genes = filter(slide.df, r.diff&gt;300 | d.diff&gt;.5)$gene\nnames(biased.genes) = rowData(spe)[biased.genes,\"gene_name\"]\n\n\n\nnorm.to.mbp=FALSE : avg expression values in logNormCounts\n\n\n\n\n\n\n\n\n\n\n\nTwo or three features show clear patterns of slide-biased expression (MTRNR2L12, AL627171.2, and partially MTRNR2L8).\nFor the remaining features (MTRNR2L1, SERPINA3, CHI3L1, C5orf63), although the average slide expression may indicate a slide batch effect, the dotplot suggests that individual samples drive these differences.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>MBv: batch = slide</span>"
    ]
  },
  {
    "objectID": "mbv_slide.html#spatial-expression-plots",
    "href": "mbv_slide.html#spatial-expression-plots",
    "title": "3  MBv: batch = slide",
    "section": "3.4 Spatial expression plots",
    "text": "3.4 Spatial expression plots\nLooking at the unscaled logNormCounts values in the context of the spatial dimension, we can confirm slide-biased expression of MTRNR2L12 and AL627171.2.\n\n\n\n\n\n\n\n\n\nHowever, MTRNR2L8 clearly is most influenced by sample-specific variation rather than slide.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>MBv: batch = slide</span>"
    ]
  },
  {
    "objectID": "mbv_slide.html#sample-specific-bias",
    "href": "mbv_slide.html#sample-specific-bias",
    "title": "3  MBv: batch = slide",
    "section": "3.5 Sample-specific bias?",
    "text": "3.5 Sample-specific bias?\nOur experimental design includes only 1 sample per subject, such that no two samples came from the same brain donor. Thus, batch effect of subject and sample are one and the same.\nAs we established with the spatialLIBD example, there can be subject-specific non-biologically meaningful (for spatial clustering) variation in gene expression.\nHowever, the concern with examining sample-specific variation in gene expression with our dataset is that there are between-sample differences in tissue composition (the proportion of spots corresponding to the different spatial domains). It would be problematic it using deviance residuals to identify sample-biased features identified key layer markers that have different expression across samples due to change in number of spots-per-sample comprising the different cortical layers.\nUsing the original raw SVG clustering outcome as a guide, we can see that Br5902 has a substantially higher proportion of WM spots than the other samples.\n\n\n\n\n\n\n\n\n\nNotably, Br5902 appears to contribute to the identification of MTRNR2L1, SERPINA3, and CHI3L1 as subject/sample-biased (dotplot above).\nWe observed that unlike standard WM markers (left), the expression of MTRNR2L1, SERPINA3, and CHI3L1 expression are relatively equal across different spatial domains, both within the apparent outlier Br5902 and in other slides/samples (right plot).\n\n\n\n\n\n\n\n\n\nTo confirm this, we again refer to the unscaled logNormCounts values with the spatial expression plots (showing only a subset of samples for simplicity).\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThese data indicate that it is worth exploring a subject batch effect in our data, though we must examine a potential influence of tissue composition before proceeding.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>MBv: batch = slide</span>"
    ]
  },
  {
    "objectID": "mbv_subject.html",
    "href": "mbv_subject.html",
    "title": "4  MBv: batch = subject",
    "section": "",
    "text": "4.0.0.0.1 to do\nJACQUI YOU NEED TO CHANGE THE CLUSTER MARKER “BAD” TO “LOW UMI”\nBased on\nbrain.df = read.csv(\"processed-data/bindev_default-brain_svgs-only.csv\")",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>MBv: batch = subject</span>"
    ]
  },
  {
    "objectID": "mbv_subject.html#wm-influence-check",
    "href": "mbv_subject.html#wm-influence-check",
    "title": "4  MBv: batch = subject",
    "section": "4.1 WM influence check",
    "text": "4.1 WM influence check\nMake sure that top WM markers aren’t super different\n\n\n\n\n\n\n\n\n\nThis gives us initial assurance that our feature-based QC approach is not identifying features that exhibit differences in gene expression between subjects due to the layer composition of the sample.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>MBv: batch = subject</span>"
    ]
  },
  {
    "objectID": "mbv_subject.html#find-subject-biased-features",
    "href": "mbv_subject.html#find-subject-biased-features",
    "title": "4  MBv: batch = subject",
    "section": "4.2 Find subject-biased features",
    "text": "4.2 Find subject-biased features\n\n# care about loss in deviance\nbrain.df$d.diff = (brain.df[,\"dev_default\"]-brain.df[,\"dev_brain\"])/brain.df$dev_brain\n# care about increase in rank\nbrain.df$r.diff = brain.df[,\"rank_brain\"]-brain.df[,\"rank_default\"]\n\n\n\n\n\n\n\n\n\n\n\n4.2.1 SD cutoff: deviance\n\nmean1 = mean(brain.df$d.diff)\nsd1 = sd(brain.df$d.diff)\nbrain.df$nSD_dev = (brain.df$d.diff-mean1)/sd1\nsummary(brain.df$nSD_dev)\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n-0.30998 -0.23548 -0.17844  0.00000 -0.03646 30.97281 \n\n\nBinning the nSD( % diff. deviance) helps to identify a threshold.\n\n\n\n\n\n\n\n\n\nSince we’re still establishing the method we need to check the genes against layer-specific effects.\n\n4.2.1.0.1 to do\nJACQUI YOU NEED TO SPLIT THIS PLOT IN HALF AND THEN PUT IT SIDE BY SIDE\n\n\n\n\n\n\n\n\n\nSatisfied with a threshold of 5 standard deviations for delta deviance\n\nbrain.df$dev_outlier = brain.df$nSD_dev&gt;=5\n\n\n\n\n4.2.2 SD cutoff: rank\n\nmean2 = mean(brain.df$r.diff)\nsd2 = sd(brain.df$r.diff)\nbrain.df$nSD_rank = (brain.df$r.diff-mean1)/sd2\nsummary(brain.df$nSD_rank)\n\n     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. \n-0.907385 -0.428725 -0.239781 -0.000451  0.037338 11.512571 \n\n\nSOME TEXT IS NEEDED HERE TO BREAK THINGS UP\n\n\n\n\n\n\n\n\n\n\nfilter(brain.df, between(nSD_rank,5,7)) %&gt;% arrange(desc(nSD_rank)) %&gt;%\n  select(gene_name, r.diff, nSD_rank)\n\n   gene_name r.diff nSD_rank\n1       XIST    547 6.889727\n2 AL627171.2    545 6.864535\n3   C11orf96    536 6.751168\n4      NEAT1    517 6.511838\n5     CLDN11    463 5.831638\n6       MT1M    447 5.630097\n7      HSPB1    442 5.567115\n8      PLPP3    407 5.126245\n\n\n\n4.2.2.0.1 to do\nJACQUI, SPLIT THIS ONE IN TWO (&gt;=5, &gt;=6) AND PUT SIDE BY SIDE\n\n\n\n\n\n\n\n\n\nCldn11 stands out as a possible marker for WM that may not be truly biased by subject but actually reflect varying tissue composition.\nCheck spatial expression.\n\n\n\n\n\n\n\n\n\nCLDN11 has nSD(rank)&lt;6 so we decided to check another gene with nSD(rank)&lt;6 to see if it was worth including these genes.\n\n\n\n\n\n\n\n\n\nWe observed no clear subject bias for either CLDN11 or PLPP3 so we settled on a threshold of 6 standard deviations for delta rank.\n\nbrain.df$rank_outlier = brain.df$nSD_rank&gt;=6",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>MBv: batch = subject</span>"
    ]
  },
  {
    "objectID": "mbv_subject.html#final-check-all-biased-genes",
    "href": "mbv_subject.html#final-check-all-biased-genes",
    "title": "4  MBv: batch = subject",
    "section": "4.3 Final check all biased genes",
    "text": "4.3 Final check all biased genes\n\nbiased.genes = filter(brain.df, dev_outlier==T | rank_outlier==T)$gene\nnames(biased.genes) = rowData(spe)[biased.genes,\"gene_name\"]\n\n\n\n\n\n\n\n\n\n\nCheck SPP1\n\n\n\n\n\n\n\n\n\nSPP1 is the perfect example of a gene we want to exclude because it is associated with spatial domains for some subjects/samples but is definitively errant in Br8092, inverse expression pattern in Br5993, and overall increased in Br5902.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>MBv: batch = subject</span>"
    ]
  },
  {
    "objectID": "mbv_subject.html#cluster-results",
    "href": "mbv_subject.html#cluster-results",
    "title": "4  MBv: batch = subject",
    "section": "4.4 Cluster results",
    "text": "4.4 Cluster results\n\n\n\n\n\n\n\n\n\nThe exclusion of an additional 3 genes that would have occurred with the nSD(rank)&gt;=5 threshold had a surprisingly large impact on cluster results (losing the L5 and L6 distinction in favor for a small, noisy cluster most closely linked with L1).",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>MBv: batch = subject</span>"
    ]
  }
]